:root {
  line-height: map-get($BASE, line_height);
  font-size: map-get($BASE, font_size);
  font-family: map-get($BASE, font_family);
  font-weight: map-get($BASE, font_weight);
  color: map-get($BASE, main_color);
  background-color: map-get($BASE, background_color);

  // @each $media, $multiplier in map-get($SETTINGS, media) {
  //   @include media($media) {
  //     font-size: round(((map-get($SETTINGS, font_size) * $multiplier) * 100) / 100)
  //   }
  // }
}

body {
    &.active {
        overflow: hidden;
        touch-action: none;
        overscroll-behavior: none;
    }
}

.wrapper {
  min-height: 100%;
  overflow: clip;
  position: relative;
  display: flex;
  flex-flow: column nowrap;

  & > main {
    flex: 1 1 auto;
  }
  // Фикс слайдеров
  > * {
    min-width: 0;
  }
}

._container {
    width: 100%;
    margin: 0 auto;
    @include rem((
      padding: 0 map-get($BASE, container_padding_x),
      min-width: map-get($BASE, min_width)
    ));
    height: 100dvh;

    @if map-get($SETTINGS, responsive_type) == 1 {
      @include rem(max-width, map-get(map-get($CONTAINER, normal), max-width));
    }
    @else if map-get($SETTINGS, responsive_type) == 2 {
      max-width: 100%;

      @each $type, $props in $CONTAINER {
        @include media($type) {
          $padding-x: map-get($props, padding-x);
          $max-width: map-get($props, max-width);

          @include rem((
            max-width: ($max-width + $padding-x),
            padding: 0 ($padding-x / 2)
          ))
        }
      }
    }
   
}


